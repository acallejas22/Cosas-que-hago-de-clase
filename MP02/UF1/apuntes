lista={1,2,3}--> cada valor tiene un recuento, y en programación se cuenta a partir de 0,
es decir, en la lista, 1 sería igual al 0 en recuento, 2 al 1 y 3 al 2, en la posición 0 está el 1,
en la posición 1 está el 2 y en la posición 2, está el 3.
lista [2]: está pidiendo que muestre el 2 elemento, en este caso es el 3.
lista[<2]: está pidiendo que mostremos los elementos por debajo del 2 elemento, en este caso, es el 2 y el 1.


SELECT: sirve para seleccionar algo.
SELECT * from persona: en este caso, hay una tabla persona, que tiene atributos.
LIMIT 5; --> indica que el límite está en el 5 elemento de la tabla, es decir, 
se cogen los 5 primeros elementos de la tabla.


SELECT * from persona
WHERE dni LIKE '%7'; --> esto nos dice que cojeremos desde el elemento 0 hasta el 7.


SELECT * from persona
WHERE dni LIKE '%7%'; --> esto nos dice que coge los registros en la tabla persona que contengan un 7.
SELECT dni from persona --> en este caso, cogería los dni como registtros. 

SELECT * from persona
WHERE dni LIKE '___7_____'; --> nos intenta coger el elemento que escribimos en la posición que la hemos escrito en la tabla de registros,
pero en este caso, el 7 está en la posición 3 y nosotros lo hemos buscado en la posición 4.

SELECT * from persona
WHERE dni  '4178888A'; --> se coge un registro en concreto.


Base de datos: consultar, gestionar y compartir datos de forma instantánea.


En una tabla, no todos pueden ver todos los datos. Por ejemplo, un programador no podrá ver el DNI, la dirección e o el número de teléfono de los usuarios
que estan en la tabla, un usuario no podrá ver el DNI, la dirección, el género, el número y quizás los nombres y los apellidos de los usuarios.
El administrador podrá ver todos los dats, ya que es el administrador y tiene todos los privilegios.



Cada fila es un registro.
()--> sirve para aislar, ej(1977,2006)--> te muetrsa desde el 1978 hasta el 2005.
[]-->indicar un intervalo, ej[1,3], te muetsra del 1 al 3.
{}--> indican elementos concretos/específicos, ej {hombre, mujer, nobinario}.


Lenguages usados:

DDL: definición de datos.
DML: manipulación de datos.


Los datos centralizados son los datos que te guardas para acceder más tarde, ya que actuas de cliente y servidor a la vez.

 
 Modelo de bases de datos:
 
 Relacional: Todas las entidades estan interreladcionadas
 No relaciona: Todas las entidades, no están relacionadas

Las 3 partes de una estructura de modelo de BBD son, nivel físico(interno, BD), nicel lógico(conceptual).


Nodos en BBDD:
Nodo jerñárquico: Tienen una raiz y las hojas pueden tener un padre solo.
Nodo en red: Tienen una raiz, pero las hojas pueden tener más de un padre.

Modelo de diagrama de BBDD ER, creado por el Dr. Peter Shan Chen:

Bases de datos relacionales
Las entidades se pondrán en mayúscula, serán en singular y  su pulsador es un rectángulo.
Los atributos se ponen normal (sin carácteres especiales) e irán con un recuadro en forma de elipse.

Cuando hablamos de dominio, se hará de forma global (todos los casos posibles, no se excluye nada).
Dentro de los atributos, podremos tener atributos simples o atributos compuestos.
Atributos simple: no se divide el valor que tiene.
Atrubitos complejos: el valor que tiene se divide, como el apellido.
Un atributo puede ser monoevaluado o multievaluado.
Monoevaluado:  Hay un valor por cada instancia. --> va con 1 elipse 
Multievaluado: Hay más de un valor por cada instancia(puiedes tener más de un teléfono). --> va con 2 elipses.

Primer 1 --> Obligatorio poner un valor.
Segundo 1 --> Únicamente se puede poner 1 valor.
n: Que puede tener muchos valores.
0: Opcional poner valores.
(1,1) monoevaluado obligatorio.
(0,1) monoevaluado opcional.
(1,n) multievaluado obligatorio.
(0,n) multievaluado opcional.

Atributo calculado/derivado: Cuando su valor se puede calcular a través de otros atributos u otras entidades interrelacionadas.
Su patrón es una elipse con linea discontinua.

La clave primaria se indica subrayandola, también puede ser 1 o un conjunto de atributos.
La interrelación es la asociación entre 2 o más entidades.
Interrelaciones: pueden ser binarias, terciarias, cuatrnarias...
Autorrelación: La misma entidad se relaciona con la misma entidad.
Las interrelaciones pueden tener atributos.

Cardinalidad:
(1:1) --> uno a uno
(1:n) --> uno a muchos
(n:1) --> muchos a uno
(n:m) --> muhcos a muchos
1 = -->
n = -->> o (nada)

Si queremos denotar que una interrelación es incontable usaremos "*".
símbolo "-" en la flecha :la entidad es obligatoria en la interrelación.
O en la flecha :indica que la entidad es opcionoal en la interrelación.

Cardinalidad:
0= opcional
n= mucho
primer 1= obligatorio
segundo 1= uno

si tenemos n interrelaciones, el número de combinaciones será n+1.
Ej: n = 5, tendremos 6 combinaciones(5+1=6).


Interrelación recursiva:
Una autorrelación que se llama asi misma y se lee de manera pre y post.
Pre: Lo primero que se lee de la autorrelación.
Post: Lo segundo que se lee de la autorrelación.

Entidades debiles:
Forma de representación, un cuadrado encima de otro cuadrado.
Una entidad que depende de otra entidad.
Su clave se llama atributo discriminante.

clave primaria de entidad debil:
Forma de representacióin: Subrayando la palabra con línea discontinua.

Como se crea una entidad:

1r paso:
Montar el esqueleto.
Poner todas las entidades e integraciones.

2o paso:
Poner la cardinalidad de cada integración.
Añadir restricciones de partición.

3r paso:
Añadir todos los tipos de atributps

Extender entidades:
Su símbolo es un triángulo boca abajo.
Los hijos heredan los atributos de los padres
Se representa con "ES".

Especialización:
Podemos dividir una entidad "superclase" en varias entidades.

Generalización:
A partir de algunas entidades, obtenemos una general.

Restricciones de extensiones :
hay dos tipos, disjuntas o solapadas.

Disjunta:
cuando hay una instancia persona y solamente puede ser profesor o alumno, no podrá ser a la vez profesor y alumno.
Se representa con "D".

Solapada/Total:
Cuando hay una instancia persona y puede ser profesor y alumno a la vez.
Se representa con "E".

Total:
todos son o profesroes o todos alumnos(entidades).
Se representa con "T".
Si hay 100 entidades, se repartirán por la mitad a ser profersores o alumnos.

Parcial:
Todas las personas se pueden dividir entre profersor y alumn(entidades)
Se representa con "P".
Si hay 100 entidades, se repartirán se pueden partir a conveniencia en profersores o alumnos y la suma de todas las instancias, no será el total, es decir, 
no serán 100 personas los profesores y alumnos.

Agregación:
Cuando hay redundancia en interrelaciones, se considerará como una entidad  una interrelacón dentor de la redundancia para que etsa desaparezca. 

Todas las entidades se convierten en tablas/relaciones/tuplas.
cunado es una relacion binaria, se crea una nueva clave foranea(claveprimaria de la otra entidad que se pone en la tabla/relación)
si tenemso (n,n) en l relacion binaria, se crea una nueva relación.

clave foranea:
clave de la otra entidad, que se añade a la otra entidad(el atributo ha de ser único).
Conectividad 1:1 ha de ser para que exista clave foranea.
Cuando la interrelación es (n:n), la clave foranea será la combinación de los atributos únicos de las entidades interrelacionadas.
